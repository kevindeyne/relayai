/*
 * This file is generated by jOOQ.
*/
package com.kevindeyne.tasker.jooq.tables.records;


import com.kevindeyne.tasker.jooq.tables.ActivationPending;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivationPendingRecord extends UpdatableRecordImpl<ActivationPendingRecord> implements Record4<Long, Long, String, Timestamp> {

    private static final long serialVersionUID = 708801454;

    /**
     * Setter for <code>taskr.activation_pending.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taskr.activation_pending.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taskr.activation_pending.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>taskr.activation_pending.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>taskr.activation_pending.activation_key</code>.
     */
    public void setActivationKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taskr.activation_pending.activation_key</code>.
     */
    public String getActivationKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taskr.activation_pending.valid_until</code>.
     */
    public void setValidUntil(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>taskr.activation_pending.valid_until</code>.
     */
    public Timestamp getValidUntil() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ActivationPending.ACTIVATION_PENDING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ActivationPending.ACTIVATION_PENDING.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ActivationPending.ACTIVATION_PENDING.ACTIVATION_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return ActivationPending.ACTIVATION_PENDING.VALID_UNTIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getActivationKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getValidUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getActivationKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getValidUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivationPendingRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivationPendingRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivationPendingRecord value3(String value) {
        setActivationKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivationPendingRecord value4(Timestamp value) {
        setValidUntil(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivationPendingRecord values(Long value1, Long value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivationPendingRecord
     */
    public ActivationPendingRecord() {
        super(ActivationPending.ACTIVATION_PENDING);
    }

    /**
     * Create a detached, initialised ActivationPendingRecord
     */
    public ActivationPendingRecord(Long id, Long userId, String activationKey, Timestamp validUntil) {
        super(ActivationPending.ACTIVATION_PENDING);

        set(0, id);
        set(1, userId);
        set(2, activationKey);
        set(3, validUntil);
    }
}
