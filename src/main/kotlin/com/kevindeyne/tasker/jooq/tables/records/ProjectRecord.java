/*
 * This file is generated by jOOQ.
*/
package com.kevindeyne.tasker.jooq.tables.records;


import com.kevindeyne.tasker.jooq.tables.Project;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record8<Long, String, String, Long, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -815485873;

    /**
     * Setter for <code>taskr.project.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taskr.project.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taskr.project.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>taskr.project.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>taskr.project.key</code>.
     */
    public void setKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taskr.project.key</code>.
     */
    public String getKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taskr.project.active_sprint_id</code>.
     */
    public void setActiveSprintId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>taskr.project.active_sprint_id</code>.
     */
    public Long getActiveSprintId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>taskr.project.sprint_length</code>.
     */
    public void setSprintLength(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>taskr.project.sprint_length</code>.
     */
    public Integer getSprintLength() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>taskr.project.major_version</code>.
     */
    public void setMajorVersion(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>taskr.project.major_version</code>.
     */
    public Integer getMajorVersion() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>taskr.project.minor_version</code>.
     */
    public void setMinorVersion(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>taskr.project.minor_version</code>.
     */
    public Integer getMinorVersion() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>taskr.project.patch_version</code>.
     */
    public void setPatchVersion(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>taskr.project.patch_version</code>.
     */
    public Integer getPatchVersion() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, String, Long, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, String, Long, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Project.PROJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Project.PROJECT.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Project.PROJECT.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Project.PROJECT.ACTIVE_SPRINT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Project.PROJECT.SPRINT_LENGTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Project.PROJECT.MAJOR_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Project.PROJECT.MINOR_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Project.PROJECT.PATCH_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getActiveSprintId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getSprintLength();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getMajorVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getMinorVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getPatchVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getActiveSprintId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSprintLength();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getMajorVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getMinorVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getPatchVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value3(String value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value4(Long value) {
        setActiveSprintId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value5(Integer value) {
        setSprintLength(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value6(Integer value) {
        setMajorVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value7(Integer value) {
        setMinorVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value8(Integer value) {
        setPatchVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord values(Long value1, String value2, String value3, Long value4, Integer value5, Integer value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Long id, String title, String key, Long activeSprintId, Integer sprintLength, Integer majorVersion, Integer minorVersion, Integer patchVersion) {
        super(Project.PROJECT);

        set(0, id);
        set(1, title);
        set(2, key);
        set(3, activeSprintId);
        set(4, sprintLength);
        set(5, majorVersion);
        set(6, minorVersion);
        set(7, patchVersion);
    }
}
