/*
 * This file is generated by jOOQ.
*/
package com.kevindeyne.tasker.jooq.tables.records;


import com.kevindeyne.tasker.jooq.tables.Invitation;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InvitationRecord extends UpdatableRecordImpl<InvitationRecord> implements Record6<Long, Long, String, Timestamp, String, String> {

    private static final long serialVersionUID = -1192776914;

    /**
     * Setter for <code>taskr.invitation.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taskr.invitation.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taskr.invitation.project_id</code>.
     */
    public void setProjectId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>taskr.invitation.project_id</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>taskr.invitation.invitation_key</code>.
     */
    public void setInvitationKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taskr.invitation.invitation_key</code>.
     */
    public String getInvitationKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taskr.invitation.valid_until</code>.
     */
    public void setValidUntil(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>taskr.invitation.valid_until</code>.
     */
    public Timestamp getValidUntil() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>taskr.invitation.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>taskr.invitation.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>taskr.invitation.role</code>.
     */
    public void setRole(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>taskr.invitation.role</code>.
     */
    public String getRole() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Long, String, Timestamp, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Long, String, Timestamp, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Invitation.INVITATION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Invitation.INVITATION.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Invitation.INVITATION.INVITATION_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Invitation.INVITATION.VALID_UNTIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Invitation.INVITATION.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Invitation.INVITATION.ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getInvitationKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getValidUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getInvitationKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getValidUntil();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord value2(Long value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord value3(String value) {
        setInvitationKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord value4(Timestamp value) {
        setValidUntil(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord value5(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord value6(String value) {
        setRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InvitationRecord values(Long value1, Long value2, String value3, Timestamp value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvitationRecord
     */
    public InvitationRecord() {
        super(Invitation.INVITATION);
    }

    /**
     * Create a detached, initialised InvitationRecord
     */
    public InvitationRecord(Long id, Long projectId, String invitationKey, Timestamp validUntil, String email, String role) {
        super(Invitation.INVITATION);

        set(0, id);
        set(1, projectId);
        set(2, invitationKey);
        set(3, validUntil);
        set(4, email);
        set(5, role);
    }
}
